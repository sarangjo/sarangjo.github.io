{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/bio.js","webpack:///./src/utils/proptypes.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","React","Component","propTypes","PropTypes","object","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","string","isRequired","func","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","bioQuery","Bio","react_default","gatsby_browser_entry","author","style","display","gatsby_image_default","fixed","avatar","childImageSharp","alt","marginRight","marginTop","marginBottom","minWidth","borderRadius","imgStyle","margin","_2612972255","oneOfType","arrayOf","node","ListLink","react","marginLeft","to","pt","Header","_this$props","description","showBio","superTop","parts","split","filter","x","trim","length","link","push","key","each","part","justifyContent","bio","listStyle","flexShrink","header_ListLink","bool","Layout","helmetTitle","helmetDescription","maxWidth","padding","Helmet_default","htmlAttributes","lang","meta","name","content","header","SEO","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","titleTemplate","property","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array"],"mappings":"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","file":"component---src-pages-404-js-9446277c2d57cc699418.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    );\n  }\n}\n\nNotFoundPage.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object,\n};\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\";\nimport Wordpress2016 from \"typography-theme-wordpress-2016\";\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  };\n};\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Image from \"gatsby-image\";\n\nimport { rhythm } from \"../utils/typography\";\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata;\n        return (\n          <div\n            style={{\n              display: `flex`,\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginTop: \"auto\",\n                marginBottom: \"auto\",\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p style={{ margin: \"auto 0\" }}>\n              <strong>{author}</strong>&apos;s personal website.\n            </p>\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import PropTypes from \"prop-types\";\r\n\r\nexport const children = PropTypes.oneOfType([\r\n  PropTypes.arrayOf(PropTypes.node),\r\n  PropTypes.node,\r\n]);\r\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport each from \"lodash/each\";\nimport PropTypes from \"prop-types\";\n\nimport Bio from \"./bio\";\nimport { rhythm, scale } from \"../utils/typography\";\nimport * as pt from \"../utils/proptypes\";\n\nconst ListLink = props => (\n  <li style={{ display: \"inline-block\", marginLeft: \"1rem\" }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n);\n\nListLink.propTypes = {\n  to: PropTypes.string,\n  children: pt.children,\n};\n\nclass Header extends React.Component {\n  render() {\n    const { location, title, description, showBio } = this.props;\n\n    const superTop = [];\n    const parts = location.pathname.split(\"/\").filter(x => !!x.trim().length);\n\n    let link = \"/\";\n    superTop.push(\n      <Link to={link} key={link}>\n        home\n      </Link>\n    );\n    each(parts, part => {\n      link += `${part}/`;\n      superTop.push(\n        <span key={link}>\n          &nbsp;&gt;&nbsp;\n          <Link to={link}>{part}</Link>\n        </span>\n      );\n    });\n\n    return (\n      <header\n        style={{\n          marginBottom: rhythm(0.4),\n        }}\n      >\n        <i style={{ ...scale(-1 / 4) }}>{superTop}</i>\n        <h1 style={{ ...scale(1.5), marginTop: 0, marginBottom: rhythm(0.75) }}>\n          {title}\n        </h1>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginBottom: rhythm(0.6),\n          }}\n        >\n          {showBio ? (\n            <Bio />\n          ) : (\n            <i style={{ margin: \"auto 0\" }}>{description}</i>\n          )}\n          <ul\n            style={{\n              listStyle: \"none\",\n              flexShrink: 0,\n              marginBottom: \"auto\",\n              marginTop: \"auto\",\n            }}\n          >\n            <ListLink to=\"/\">Home</ListLink>\n            <ListLink to=\"/blog/\">Blog</ListLink>\n            <ListLink to=\"/theater/\">Theater</ListLink>\n            {/*<ListLink to=\"/poetry/\">Poetry</ListLink>*/}\n          </ul>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  location: PropTypes.object,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  showBio: PropTypes.bool,\n};\n\nexport default Header;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nimport Header from \"./header\";\nimport { rhythm } from \"../utils/typography\";\nimport * as pt from \"../utils/proptypes\";\n\n// Import typefaces\nimport \"typeface-montserrat\";\nimport \"typeface-merriweather\";\n\nexport default class Layout extends React.Component {\n  render() {\n    const {\n      location,\n      title,\n      description,\n      helmetTitle,\n      helmetDescription,\n      children,\n      showBio,\n    } = this.props;\n\n    return (\n      <div\n        style={{\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          maxWidth: rhythm(30),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <Helmet\n          htmlAttributes={{ lang: \"en\" }}\n          meta={[\n            { name: \"description\", content: helmetDescription || description },\n          ]}\n          title={helmetTitle || title}\n        />\n        <Header\n          title={title}\n          description={description}\n          location={location}\n          showBio={showBio}\n        />\n        {children}\n      </div>\n    );\n  }\n}\n\nLayout.propTypes = {\n  location: PropTypes.object,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  helmetTitle: PropTypes.string,\n  helmetDescription: PropTypes.string,\n  children: pt.children,\n  showBio: PropTypes.bool,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}