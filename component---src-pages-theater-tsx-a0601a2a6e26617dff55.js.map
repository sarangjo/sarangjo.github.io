{"version":3,"file":"component---src-pages-theater-tsx-a0601a2a6e26617dff55.js","mappings":"uMAKA,MAAMA,EAAUA,CAACC,EAAgBC,IACtB,YAATA,EACEC,EAAAA,cAAA,SAAIF,EAAKG,YAAYC,QACV,aAATH,EACFC,EAAAA,cAAA,SACEA,EAAAA,cAAA,SAAIF,EAAKK,OAAOC,OAGlBJ,EAAAA,cAAA,KAAGK,wBAAyB,CAAEC,OAAQR,EAAKS,WAiBhC,SAASC,EAAWC,GAAqD,IAApD,KAAEX,EAAI,KAAEC,GAAyCU,EACnF,MAAMC,EAAQZ,EAAKG,YAAYS,OAASZ,EAAKK,OAAOQ,KACpD,OACEX,EAAAA,cAAA,OAAKY,IAAKd,EAAKK,OAAOQ,MACpBX,EAAAA,cAAA,MACEa,MAAO,CACLC,cAAcC,EAAAA,EAAAA,IAAO,EAAI,KAG1BjB,EAAKK,OAAOa,SACXhB,EAAAA,cAACiB,EAAAA,EAAC,CAACJ,MAAO,CAAEK,UAAY,QAASC,GAAIrB,EAAKK,OAAOQ,MAC9CD,GAGHV,EAAAA,cAACoB,EAAAA,KAAI,CAACP,MAAO,CAAEK,UAAY,QAASC,GAAIrB,EAAKK,OAAOQ,MACjDD,GAGK,aAATX,GAAuB,MAE1BC,EAAAA,cAAA,aAAQF,EAAKG,YAAYoB,MACxBxB,EAAQC,EAAMC,GAGrB,C,yFClDe,SAASuB,EAAGb,GAYvB,IAZwB,YAC1Bc,EAAW,KACXC,EAAQ,KAAG,KACXC,EAAO,GAAE,SACTC,EAAW,GAAE,MACbhB,GAODD,EACC,OACET,EAAAA,cAAC2B,EAAAA,YAAW,CACVC,MAAOC,EACPC,OAASC,IACP,MAAMC,EAAkBT,GAAeQ,EAAKE,KAAKC,aAAaX,YAC9D,OACEvB,EAAAA,cAACmC,EAAAA,EAAM,CACLC,eAAgB,CACdZ,QAEFd,MAAOA,EACP2B,cAAgB,QAAON,EAAKE,KAAKC,aAAaxB,QAC9Ce,KAAM,CACJ,CACEa,KAAO,cACPzC,QAASmC,GAEX,CACEO,SAAW,WACX1C,QAASa,GAEX,CACE6B,SAAW,iBACX1C,QAASmC,GAEX,CACEO,SAAW,UACX1C,QAAU,WAEZ,CACEyC,KAAO,eACPzC,QAAU,WAEZ,CACEyC,KAAO,kBACPzC,QAASkC,EAAKE,KAAKC,aAAaM,QAElC,CACEF,KAAO,gBACPzC,QAASa,GAEX,CACE4B,KAAO,sBACPzC,QAASmC,IAGVS,OACCf,EAASgB,OAAS,EACd,CACEJ,KAAO,WACPzC,QAAS6B,EAASiB,KAAM,OAE1B,IAELF,OAAOhB,IACV,GAKZ,CAEA,MAAMI,EAAY,Y,gHCxElB,MAAMe,EAAQ,UACRC,EAAc,qEAEL,SAASC,EAAaC,GACnC,MAAM,KAAEhB,GAASgB,EACXrC,EAAQqB,EAAKE,KAAKC,aAAaxB,MAC/BsC,EAAQjB,EAAKkB,YAAYC,MAG/B,OACElD,EAAAA,cAACmD,EAAAA,EAAM,CACLC,SAAUL,EAAMK,SAChB1C,MAAOkC,EACPrB,YAAasB,EACbQ,YAAc,GAAET,OAAWlC,IAC3B4C,SAAS,GAETtD,EAAAA,cAACsB,EAAAA,EAAG,CAACZ,MAAOkC,EAAOlB,SAAU,CAAE,UAAW,SAAU,aAAc,WACjEsB,EAAMO,KAAI,CAAA9C,EAAW+C,KAAC,IAAX,KAAE1D,GAAMW,EAAA,OAClBT,EAAAA,cAACQ,EAAAA,EAAW,CAACI,IAAK4C,EAAG1D,KAAMA,EAAMC,KAAK,WAAY,IAI1D,C,oEC3BO,MAAMkB,EAAIR,IAAA,IAAC,GAChBU,EAAE,MACFN,EAAK,SACL4C,GAIAhD,EAAA,OACAT,EAAAA,cAAA,KAAGa,MAAOA,EAAO6C,KAAMvC,EAAIwC,OAAO,SAASC,IAAI,uBAC5CH,EACC,C","sources":["webpack://sarangjo.github.io/./src/components/postExcerpt.tsx","webpack://sarangjo.github.io/./src/components/seo.tsx","webpack://sarangjo.github.io/./src/pages/theater.tsx","webpack://sarangjo.github.io/./src/utils/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { rhythm } from \"../utils/typography\";\nimport { L } from \"../utils\";\n\nconst content = (node: PostNode, type?: string) =>\n  type === \"theater\" ? (\n    <p>{node.frontmatter.source}</p>\n  ) : type === \"external\" ? (\n    <p>\n      <i>{node.fields.note}</i>\n    </p>\n  ) : (\n    <p dangerouslySetInnerHTML={{ __html: node.excerpt as TrustedHTML }} />\n  );\n\nexport interface PostNode {\n  frontmatter: {\n    title: string;\n    date: string;\n    source?: string;\n  };\n  fields: {\n    slug: string;\n    external?: boolean;\n    note?: string;\n  };\n  excerpt?: string | TrustedHTML;\n}\n\nexport default function PostExcerpt({ node, type }: { node: PostNode; type?: string }) {\n  const title = node.frontmatter.title || node.fields.slug;\n  return (\n    <div key={node.fields.slug}>\n      <h3\n        style={{\n          marginBottom: rhythm(1 / 4),\n        }}\n      >\n        {node.fields.external ? (\n          <L style={{ boxShadow: `none` }} to={node.fields.slug}>\n            {title}\n          </L>\n        ) : (\n          <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n            {title}\n          </Link>\n        )}\n        {type === \"external\" && \"\\u{1f855}\"}\n      </h3>\n      <small>{node.frontmatter.date}</small>\n      {content(node, type)}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nexport default function SEO({\n  description,\n  lang = `en`,\n  meta = [],\n  keywords = [],\n  title,\n}: {\n  description?: string;\n  lang?: string;\n  meta?: any[];\n  keywords?: string[];\n  title: string;\n}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription = description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\n\nimport PostExcerpt from \"../components/postExcerpt\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst TITLE = \"Theater\";\nconst DESCRIPTION = \"All the world's a stage, and all the men and women merely players.\";\n\nexport default function TheaterIndex(props: PageProps<any>) {\n  const { data } = props;\n  const title = data.site.siteMetadata.title;\n  const posts = data.allFountain.edges;\n\n  // TODO factor out redundant code about helmetTitle\n  return (\n    <Layout\n      location={props.location}\n      title={TITLE}\n      description={DESCRIPTION}\n      helmetTitle={`${TITLE} | ${title}`}\n      showBio={false}\n    >\n      <SEO title={TITLE} keywords={[`theater`, `gatsby`, `javascript`, `react`]} />\n      {posts.map(({ node }, i) => (\n        <PostExcerpt key={i} node={node} type=\"theater\" />\n      ))}\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allFountain(sort: { frontmatter: { date: DESC } }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            source\n          }\n        }\n      }\n    }\n  }\n`;\n","import * as React from \"react\";\n\n// Helper component for a link out of the home page in a new tab\nexport const L = ({\n  to,\n  style,\n  children,\n}: React.PropsWithChildren<{\n  to: string;\n  style?: Record<string, any>;\n}>) => (\n  <a style={style} href={to} target=\"_blank\" rel=\"noopener noreferrer\">\n    {children}\n  </a>\n);\n"],"names":["content","node","type","React","frontmatter","source","fields","note","dangerouslySetInnerHTML","__html","excerpt","PostExcerpt","_ref","title","slug","key","style","marginBottom","rhythm","external","L","boxShadow","to","Link","date","SEO","description","lang","meta","keywords","StaticQuery","query","detailsQuery","render","data","metaDescription","site","siteMetadata","Helmet","htmlAttributes","titleTemplate","name","property","author","concat","length","join","TITLE","DESCRIPTION","TheaterIndex","props","posts","allFountain","edges","Layout","location","helmetTitle","showBio","map","i","children","href","target","rel"],"sourceRoot":""}