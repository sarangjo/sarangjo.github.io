{"version":3,"file":"component---src-templates-fountain-post-tsx-59c00152e238e538fedf.js","mappings":"+LAIe,SAASA,EAAT,GAYX,IAXFC,EAWC,EAXDA,YAWC,IAVDC,KAAAA,OAUC,iBATDC,KAAAA,OASC,MATM,GASN,MARDC,SAAAA,OAQC,MARU,GAQV,EAPDC,EAOC,EAPDA,MAQA,OACEC,EAAAA,cAACC,EAAAA,YAAD,CACEC,MAAOC,EACPC,OAAQ,SAACC,GACP,IAAMC,EACJX,GAAeU,EAAKE,KAAKC,aAAab,YACxC,OACEK,EAAAA,cAACS,EAAAA,EAAD,CACEC,eAAgB,CACdd,KAAAA,GAEFG,MAAOA,EACPY,cAAa,QAAUN,EAAKE,KAAKC,aAAaT,MAC9CF,KAAM,CACJ,CACEe,KAAK,cACLC,QAASP,GAEX,CACEQ,SAAS,WACTD,QAASd,GAEX,CACEe,SAAS,iBACTD,QAASP,GAEX,CACEQ,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASR,EAAKE,KAAKC,aAAaO,QAElC,CACEH,KAAK,gBACLC,QAASd,GAEX,CACEa,KAAK,sBACLC,QAASP,IAGVU,OACClB,EAASmB,OAAS,EACd,CACEL,KAAK,WACLC,QAASf,EAASoB,KAATpB,OAEX,IAELkB,OAAOnB,IAtDlB,GA8DJ,KAAMM,EAAY,Y,sGCvEH,SAASgB,EAAqBC,GAC3C,IAAMC,EAAOD,EAAMf,KAAKiB,SAClBC,EAAYH,EAAMf,KAAKE,KAAKC,aAAaT,MAK/C,OACEC,EAAAA,cAACwB,EAAAA,EAAD,CACEC,SAAUL,EAAMK,SAChBC,YAAgBL,EAAKM,YAAY5B,MAAtB,MAAiCwB,EAC5CxB,MAAOsB,EAAKM,YAAY5B,MACxBJ,YAAW,GAAK0B,EAAKM,YAAYC,MAEjC5B,EAAAA,cAACN,EAAAA,EAAD,CAAKK,MAAOsB,EAAKM,YAAY5B,QAC7BC,EAAAA,cAAAA,MAAAA,CAAK6B,UAAU,UACb7B,EAAAA,cAAAA,MAAAA,CAAK8B,wBAAyB,CAAEC,OAAQV,EAAKW,KAAKC,W","sources":["webpack://sarangjo.github.io/./src/components/seo.tsx","webpack://sarangjo.github.io/./src/templates/fountain-post.tsx"],"sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nexport default function SEO({\n  description,\n  lang = `en`,\n  meta = [],\n  keywords = [],\n  title,\n}: {\n  description?: string;\n  lang?: string;\n  meta?: any[];\n  keywords?: string[];\n  title: string;\n}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nimport \"./fountain-post.css\";\n\nexport default function FountainPostTemplate(props: PageProps<any>) {\n  const post = props.data.fountain;\n  const siteTitle = props.data.site.siteMetadata.title;\n  // TODO add description as part of the summary of the piece\n  // const description = post.excerpt;\n  // helmetDescription={description}\n\n  return (\n    <Layout\n      location={props.location}\n      helmetTitle={`${post.frontmatter.title} | ${siteTitle}`}\n      title={post.frontmatter.title}\n      description={`${post.frontmatter.date}`}\n    >\n      <SEO title={post.frontmatter.title} />\n      <div className=\"script\">\n        <div dangerouslySetInnerHTML={{ __html: post.html.script }} />\n      </div>\n    </Layout>\n  );\n}\n\n// The `$slug` parameter is passed in for each page by the page context passed into the\n// `createPage()` function in `gatsby-node.js` for fountain Gatsby objects.\nexport const pageQuery = graphql`\n  query TheaterPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    fountain(fields: { slug: { eq: $slug } }) {\n      id\n      html {\n        script\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\n"],"names":["SEO","description","lang","meta","keywords","title","React","StaticQuery","query","detailsQuery","render","data","metaDescription","site","siteMetadata","Helmet","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","FountainPostTemplate","props","post","fountain","siteTitle","Layout","location","helmetTitle","frontmatter","date","className","dangerouslySetInnerHTML","__html","html","script"],"sourceRoot":""}