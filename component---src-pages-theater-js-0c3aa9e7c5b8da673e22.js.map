{"version":3,"sources":["webpack:///./src/pages/theater.js"],"names":["TheaterIndex","render","data","this","props","title","site","siteMetadata","posts","allFountain","edges","location","description","helmetTitle","TITLE","showBio","keywords","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","date","source","React","Component","pageQuery"],"mappings":"iMAQA,IAIMA,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACFG,EAAQH,EAAKI,KAAKC,aAAaF,MAC/BG,EAAQN,EAAKO,YAAYC,MAG/B,OACE,kBAAC,IAAD,CACEC,SAAUR,KAAKC,MAAMO,SACrBN,MAdM,UAeNO,YAbN,qEAcMC,YAAgBC,aAAWT,EAC3BU,SAAS,GAET,kBAAC,IAAD,CACEV,MApBI,UAqBJW,SAAU,CAAC,UAAD,iCAEXR,EAAMS,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNb,EAAQa,EAAKC,YAAYd,OAASa,EAAKE,OAAOC,KACpD,OACE,yBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,wBACEE,MAAO,CACLC,aAAcC,YAAO,OAGvB,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWC,GAAIT,EAAKE,OAAOC,MACjDhB,IAGL,+BAAQa,EAAKC,YAAYS,MACzB,2BAAIV,EAAKC,YAAYU,c,GAjCRC,IAAMC,WA+ClB/B,YAER,IAAMgC,EAAS","file":"component---src-pages-theater-js-0c3aa9e7c5b8da673e22.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { rhythm } from \"../utils/typography\";\n\nconst TITLE = \"Theater\";\nconst DESCRIPTION =\n  \"All the world's a stage, and all the men and women merely players.\";\n\nclass TheaterIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const title = data.site.siteMetadata.title;\n    const posts = data.allFountain.edges;\n\n    // TODO factor out redundant code about helmetTitle\n    return (\n      <Layout\n        location={this.props.location}\n        title={TITLE}\n        description={DESCRIPTION}\n        helmetTitle={`${TITLE} | ${title}`}\n        showBio={false}\n      >\n        <SEO\n          title={TITLE}\n          keywords={[`theater`, `gatsby`, `javascript`, `react`]}\n        />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p>{node.frontmatter.source}</p>\n            </div>\n          );\n        })}\n      </Layout>\n    );\n  }\n}\n\nTheaterIndex.propTypes = {\n  location: PropTypes.object,\n  data: PropTypes.object,\n};\n\nexport default TheaterIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allFountain(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            source\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}