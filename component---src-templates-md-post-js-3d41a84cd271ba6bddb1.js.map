{"version":3,"sources":["webpack:///./src/templates/md-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/bio.js","webpack:///./src/utils/proptypes.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["MdPostTemplate","render","prevNextLinks","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","description","excerpt","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","style","display","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","rel","frontmatter","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","helmetTitle","helmetDescription","date","readingTime","text","_components_seo__WEBPACK_IMPORTED_MODULE_5__","dangerouslySetInnerHTML","__html","html","marginBottom","rhythm","React","Component","propTypes","PropTypes","object","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","bioQuery","Bio","react_default","gatsby_browser_entry","author","gatsby_image_default","fixed","avatar","childImageSharp","alt","marginRight","marginTop","minWidth","borderRadius","imgStyle","margin","_2612972255","oneOfType","arrayOf","node","ListLink","react","marginLeft","pt","Header","_this$props","showBio","superTop","parts","split","filter","x","trim","length","link","push","key","each","part","bio","flexShrink","header_ListLink","bool","Layout","maxWidth","Helmet_default","htmlAttributes","lang","meta","name","content","header","SEO","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","titleTemplate","property","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array"],"mappings":"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","file":"component---src-templates-md-post-js-3d41a84cd271ba6bddb1.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { rhythm } from \"../utils/typography\";\n\nimport \"./md-post.css\";\n\nclass MdPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const description = post.excerpt;\n    const { previous, next } = this.props.pageContext;\n\n    let prevNextLinks;\n    if (previous || next) {\n      prevNextLinks = (\n        <ul\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"space-between\",\n            listStyle: \"none\",\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ‚Üê {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} ‚Üí\n              </Link>\n            )}\n          </li>\n        </ul>\n      );\n    }\n\n    return (\n      <Layout\n        location={this.props.location}\n        helmetTitle={`${post.frontmatter.title} | ${siteTitle}`}\n        title={post.frontmatter.title}\n        helmetDescription={description}\n        description={`${post.frontmatter.date} - ${\n          post.fields.readingTime.text\n        }`}\n      >\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        {prevNextLinks}\n      </Layout>\n    );\n  }\n}\n\nMdPostTemplate.propTypes = {\n  data: PropTypes.object,\n  pageContext: PropTypes.object,\n  location: PropTypes.object,\n};\n\nexport default MdPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        readingTime {\n          text\n        }\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\";\nimport Wordpress2016 from \"typography-theme-wordpress-2016\";\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  };\n};\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Image from \"gatsby-image\";\n\nimport { rhythm } from \"../utils/typography\";\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata;\n        return (\n          <div\n            style={{\n              display: `flex`,\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginTop: \"auto\",\n                marginBottom: \"auto\",\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p style={{ margin: \"auto 0\" }}>\n              <strong>{author}</strong>&apos;s personal website.\n            </p>\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import PropTypes from \"prop-types\";\r\n\r\nexport const children = PropTypes.oneOfType([\r\n  PropTypes.arrayOf(PropTypes.node),\r\n  PropTypes.node,\r\n]);\r\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport each from \"lodash/each\";\nimport PropTypes from \"prop-types\";\n\nimport Bio from \"./bio\";\nimport { rhythm, scale } from \"../utils/typography\";\nimport * as pt from \"../utils/proptypes\";\n\nconst ListLink = props => (\n  <li style={{ display: \"inline-block\", marginLeft: \"1rem\" }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n);\n\nListLink.propTypes = {\n  to: PropTypes.string,\n  children: pt.children,\n};\n\nclass Header extends React.Component {\n  render() {\n    const { location, title, description, showBio } = this.props;\n\n    const superTop = [];\n    const parts = location.pathname.split(\"/\").filter(x => !!x.trim().length);\n\n    let link = \"/\";\n    superTop.push(\n      <Link to={link} key={link}>\n        home\n      </Link>\n    );\n    each(parts, part => {\n      link += `${part}/`;\n      superTop.push(\n        <span key={link}>\n          &nbsp;&gt;&nbsp;\n          <Link to={link}>{part}</Link>\n        </span>\n      );\n    });\n\n    return (\n      <header\n        style={{\n          marginBottom: rhythm(0.4),\n        }}\n      >\n        <i style={{ ...scale(-1 / 4) }}>{superTop}</i>\n        <h1 style={{ ...scale(1.5), marginTop: 0, marginBottom: rhythm(0.75) }}>\n          {title}\n        </h1>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginBottom: rhythm(0.6),\n          }}\n        >\n          {showBio ? (\n            <Bio />\n          ) : (\n            <i style={{ margin: \"auto 0\" }}>{description}</i>\n          )}\n          <ul\n            style={{\n              listStyle: \"none\",\n              flexShrink: 0,\n              marginBottom: \"auto\",\n              marginTop: \"auto\",\n            }}\n          >\n            <ListLink to=\"/\">Home</ListLink>\n            <ListLink to=\"/blog/\">Blog</ListLink>\n            <ListLink to=\"/theater/\">Theater</ListLink>\n            {/*<ListLink to=\"/poetry/\">Poetry</ListLink>*/}\n          </ul>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  location: PropTypes.object,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  showBio: PropTypes.bool,\n};\n\nexport default Header;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nimport Header from \"./header\";\nimport { rhythm } from \"../utils/typography\";\nimport * as pt from \"../utils/proptypes\";\n\n// Import typefaces\nimport \"typeface-montserrat\";\nimport \"typeface-merriweather\";\n\nexport default class Layout extends React.Component {\n  render() {\n    const {\n      location,\n      title,\n      description,\n      helmetTitle,\n      helmetDescription,\n      children,\n      showBio,\n    } = this.props;\n\n    return (\n      <div\n        style={{\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          maxWidth: rhythm(30),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <Helmet\n          htmlAttributes={{ lang: \"en\" }}\n          meta={[\n            { name: \"description\", content: helmetDescription || description },\n          ]}\n          title={helmetTitle || title}\n        />\n        <Header\n          title={title}\n          description={description}\n          location={location}\n          showBio={showBio}\n        />\n        {children}\n      </div>\n    );\n  }\n}\n\nLayout.propTypes = {\n  location: PropTypes.object,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  helmetTitle: PropTypes.string,\n  helmetDescription: PropTypes.string,\n  children: pt.children,\n  showBio: PropTypes.bool,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}