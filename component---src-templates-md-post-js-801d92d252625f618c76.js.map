{"version":3,"sources":["webpack:///./src/templates/md-post.js"],"names":["MdPostTemplate","render","prevNextLinks","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","description","excerpt","pageContext","previous","next","style","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","frontmatter","location","helmetTitle","helmetDescription","date","readingTime","text","dangerouslySetInnerHTML","__html","html","marginBottom","rhythm","React","Component","pageQuery"],"mappings":"oOAUMA,E,gLACJC,OAAA,WACE,IAKIC,EALEC,EAAOC,KAAKC,MAAMC,KAAKC,eACvBC,EAAYJ,KAAKC,MAAMC,KAAKG,KAAKC,aAAaC,MAC9CC,EAAcT,EAAKU,QAHlB,EAIoBT,KAAKC,MAAMS,YAA9BC,EAJD,EAICA,SAAUC,EAJX,EAIWA,KAgClB,OA7BID,GAAYC,KACdd,EACE,wBACEe,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,4BACGP,GACC,kBAAC,OAAD,CAAMQ,GAAIR,EAASS,OAAOC,KAAMC,IAAI,QAApC,KACKX,EAASY,YAAYhB,QAI9B,4BACGK,GACC,kBAAC,OAAD,CAAMO,GAAIP,EAAKQ,OAAOC,KAAMC,IAAI,QAC7BV,EAAKW,YAAYhB,MADpB,SAUR,kBAAC,IAAD,CACEiB,SAAUxB,KAAKC,MAAMuB,SACrBC,YAAgB1B,EAAKwB,YAAYhB,MAAtB,MAAiCH,EAC5CG,MAAOR,EAAKwB,YAAYhB,MACxBmB,kBAAmBlB,EACnBA,YAAgBT,EAAKwB,YAAYI,KAAtB,MACT5B,EAAKqB,OAAOQ,YAAYC,MAG1B,kBAAC,IAAD,CAAKtB,MAAOR,EAAKwB,YAAYhB,MAAOC,YAAaT,EAAKU,UACtD,yBAAKqB,wBAAyB,CAAEC,OAAQhC,EAAKiC,QAC7C,wBACEnB,MAAO,CACLoB,aAAcC,YAAO,MAGxBpC,I,GAtDoBqC,IAAMC,WAkEpBxC,YAER,IAAMyC,EAAS","file":"component---src-templates-md-post-js-801d92d252625f618c76.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { rhythm } from \"../utils/typography\";\n\nimport \"./md-post.css\";\n\nclass MdPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const description = post.excerpt;\n    const { previous, next } = this.props.pageContext;\n\n    let prevNextLinks;\n    if (previous || next) {\n      prevNextLinks = (\n        <ul\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"space-between\",\n            listStyle: \"none\",\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      );\n    }\n\n    return (\n      <Layout\n        location={this.props.location}\n        helmetTitle={`${post.frontmatter.title} | ${siteTitle}`}\n        title={post.frontmatter.title}\n        helmetDescription={description}\n        description={`${post.frontmatter.date} - ${\n          post.fields.readingTime.text\n        }`}\n      >\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        {prevNextLinks}\n      </Layout>\n    );\n  }\n}\n\nMdPostTemplate.propTypes = {\n  data: PropTypes.object,\n  pageContext: PropTypes.object,\n  location: PropTypes.object,\n};\n\nexport default MdPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        readingTime {\n          text\n        }\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}