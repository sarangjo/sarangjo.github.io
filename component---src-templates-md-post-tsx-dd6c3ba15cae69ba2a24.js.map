{"version":3,"file":"component---src-templates-md-post-tsx-dd6c3ba15cae69ba2a24.js","mappings":"+LAIe,SAASA,EAAGC,GAYvB,IAZwB,YAC1BC,EAAW,KACXC,EAAI,KAAO,KACXC,EAAO,GAAE,SACTC,EAAW,GAAE,MACbC,GAODL,EACC,OACEM,EAAAA,cAACC,EAAAA,YAAW,CACVC,MAAOC,EACPC,OAASC,IACP,MAAMC,EACJX,GAAeU,EAAKE,KAAKC,aAAab,YACxC,OACEK,EAAAA,cAACS,EAAAA,EAAM,CACLC,eAAgB,CACdd,QAEFG,MAAOA,EACPY,cAAa,QAAUN,EAAKE,KAAKC,aAAaT,MAC9CF,KAAM,CACJ,CACEe,KAAK,cACLC,QAASP,GAEX,CACEQ,SAAS,WACTD,QAASd,GAEX,CACEe,SAAS,iBACTD,QAASP,GAEX,CACEQ,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASR,EAAKE,KAAKC,aAAaO,QAElC,CACEH,KAAK,gBACLC,QAASd,GAEX,CACEa,KAAK,sBACLC,QAASP,IAGVU,OACClB,EAASmB,OAAS,EACd,CACEL,KAAK,WACLC,QAASf,EAASoB,KAAK,OAEzB,IAELF,OAAOnB,IACV,GAKZ,CAEA,MAAMM,EAAY,Y,0HCpEH,SAASgB,EAAeC,GACrC,MAAMC,EAAOD,EAAMf,KAAKiB,eAClBC,EAAYH,EAAMf,KAAKE,KAAKC,aAAaT,MACzCJ,EAAc0B,EAAKG,SACnB,SAAEC,EAAQ,KAAEC,GAASN,EAAMO,YAEjC,IAAIC,EA8BJ,OA7BIH,GAAYC,KACdE,EACE5B,EAAAA,cAAA,MACE6B,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGXlC,EAAAA,cAAA,UACGyB,GACCzB,EAAAA,cAACmC,EAAAA,KAAI,CAACC,GAAIX,EAASY,OAAOC,KAAMC,IAAI,QAAO,KACtCd,EAASe,YAAYzC,QAI9BC,EAAAA,cAAA,UACG0B,GACC1B,EAAAA,cAACmC,EAAAA,KAAI,CAACC,GAAIV,EAAKW,OAAOC,KAAMC,IAAI,QAC7Bb,EAAKc,YAAYzC,MAAM,SASlCC,EAAAA,cAACyC,EAAAA,EAAM,CACLC,SAAUtB,EAAMsB,SAChBC,YAAgBtB,EAAKmB,YAAYzC,MAAK,MAAMwB,EAC5CxB,MAAOsB,EAAKmB,YAAYzC,MACxB6C,kBAAmBjD,EACnBA,YAAgB0B,EAAKmB,YAAYK,KAAI,MAAMxB,EAAKgB,OAAOS,YAAYC,MAEnE/C,EAAAA,cAACP,EAAAA,EAAG,CAACM,MAAOsB,EAAKmB,YAAYzC,MAAOJ,YAAa0B,EAAKG,UACtDxB,EAAAA,cAAA,OAAKgD,wBAAyB,CAAEC,OAAQ5B,EAAK6B,QAC7ClD,EAAAA,cAAA,MACE6B,MAAO,CACLsB,cAAcC,EAAAA,EAAAA,IAAO,MAGxBxB,EAGP,CAxDAyB,EAAQ,K","sources":["webpack://sarangjo.github.io/./src/components/seo.tsx","webpack://sarangjo.github.io/./src/templates/md-post.tsx"],"sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nexport default function SEO({\n  description,\n  lang = `en`,\n  meta = [],\n  keywords = [],\n  title,\n}: {\n  description?: string;\n  lang?: string;\n  meta?: any[];\n  keywords?: string[];\n  title: string;\n}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link, graphql, PageProps } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { rhythm } from \"../utils/typography\";\n\nimport \"./md-post.css\";\n\n// Katex\nrequire(`katex/dist/katex.min.css`);\n\nexport default function MdPostTemplate(props: PageProps<any, any>) {\n  const post = props.data.markdownRemark;\n  const siteTitle = props.data.site.siteMetadata.title;\n  const description = post.excerpt;\n  const { previous, next } = props.pageContext;\n\n  let prevNextLinks;\n  if (previous || next) {\n    prevNextLinks = (\n      <ul\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          listStyle: \"none\",\n          padding: 0,\n        }}\n      >\n        <li>\n          {previous && (\n            <Link to={previous.fields.slug} rel=\"prev\">\n              ← {previous.frontmatter.title}\n            </Link>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Link to={next.fields.slug} rel=\"next\">\n              {next.frontmatter.title} →\n            </Link>\n          )}\n        </li>\n      </ul>\n    );\n  }\n\n  return (\n    <Layout\n      location={props.location}\n      helmetTitle={`${post.frontmatter.title} | ${siteTitle}`}\n      title={post.frontmatter.title}\n      helmetDescription={description}\n      description={`${post.frontmatter.date} - ${post.fields.readingTime.text}`}\n    >\n      <SEO title={post.frontmatter.title} description={post.excerpt} />\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      <hr\n        style={{\n          marginBottom: rhythm(1),\n        }}\n      />\n      {prevNextLinks}\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        readingTime {\n          text\n        }\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\n"],"names":["SEO","_ref","description","lang","meta","keywords","title","React","StaticQuery","query","detailsQuery","render","data","metaDescription","site","siteMetadata","Helmet","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","MdPostTemplate","props","post","markdownRemark","siteTitle","excerpt","previous","next","pageContext","prevNextLinks","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel","frontmatter","Layout","location","helmetTitle","helmetDescription","date","readingTime","text","dangerouslySetInnerHTML","__html","html","marginBottom","rhythm","require"],"sourceRoot":""}