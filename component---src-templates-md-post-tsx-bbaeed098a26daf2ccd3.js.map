{"version":3,"file":"component---src-templates-md-post-tsx-bbaeed098a26daf2ccd3.js","mappings":"+LAIe,SAASA,EAAI,GAYxB,IAXFC,EAWC,EAXDA,YAWC,IAVDC,KAAAA,OAUC,iBATDC,KAAAA,OASC,MATM,GASN,MARDC,SAAAA,OAQC,MARU,GAQV,EAPDC,EAOC,EAPDA,MAQA,OACE,+BACEC,MADF,EAEEC,OAAQ,YACN,IAAMC,EACJP,GAAeQ,EAAAA,KAAAA,aADjB,YAEA,OACE,qBACEC,eAAgB,CACdR,KAAAA,GAEFG,MAJF,EAKEM,cAAa,QAAUF,EAAAA,KAAAA,aALzB,MAMEN,KAAM,CACJ,CACES,KADF,cAEEC,QAASL,GAEX,CACEM,SADF,WAEED,QAASR,GAEX,CACES,SADF,iBAEED,QAASL,GAEX,CACEM,SADF,UAEED,QAAQ,WAEV,CACED,KADF,eAEEC,QAAQ,WAEV,CACED,KADF,kBAEEC,QAASJ,EAAAA,KAAAA,aAAuBM,QAElC,CACEH,KADF,gBAEEC,QAASR,GAEX,CACEO,KADF,sBAEEC,QAASL,IA/BP,OAmCFJ,EAAA,SACI,CACEQ,KADF,WAEEC,QAAST,EAAAA,KAAAA,OAtCb,mBAkDlB,IAAMY,EAAN,c,uHCvEe,SAASC,EAAeC,GACrC,IAKA,EALMC,EAAOD,EAAAA,KAAb,eACME,EAAYF,EAAAA,KAAAA,KAAAA,aAAlB,MACMjB,EAAckB,EAApB,QACA,EAA2BD,EAA3B,YAAQG,EAAR,WAAkBC,EAAlB,OAgCA,OA7BID,GAAJ,KACEE,EACE,sBACEC,MAAO,CACLC,QADK,OAELC,SAFK,OAGLC,eAHK,gBAILC,UAJK,OAKLC,QAAS,IAGX,0BACGR,GACC,wBAAMS,GAAIT,EAAAA,OAAV,KAAgCU,IAAI,QAApC,KACKV,EAAAA,YAZX,QAgBE,0BACGC,GACC,wBAAMQ,GAAIR,EAAAA,OAAV,KAA4BS,IAAI,QAC7BT,EAAAA,YADH,MAnBRC,SA6BA,qBACES,SAAUd,EADZ,SAEEe,YAAgBd,EAAAA,YAAL,YAFb,EAGEd,MAAOc,EAAAA,YAHT,MAIEe,kBAJF,EAKEjC,YAAgBkB,EAAAA,YAAL,WAAgCA,EAAAA,OAAAA,YAAwBgB,MAEnE,qBAAK9B,MAAOc,EAAAA,YAAZ,MAAoClB,YAAakB,EAAKiB,UACtD,uBAAKC,wBAAyB,CAAEC,OAAQnB,EAAKoB,QAC7C,sBACEf,MAAO,CACLgB,cAAcC,EAAAA,EAAAA,IAAO,MAZ7B","sources":["webpack://sarangjo.github.io/./src/components/seo.tsx","webpack://sarangjo.github.io/./src/templates/md-post.tsx"],"sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nexport default function SEO({\n  description,\n  lang = `en`,\n  meta = [],\n  keywords = [],\n  title,\n}: {\n  description?: string;\n  lang?: string;\n  meta?: any[];\n  keywords?: string[];\n  title: string;\n}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link, graphql, PageProps } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { rhythm } from \"../utils/typography\";\n\nimport \"./md-post.css\";\n\nexport default function MdPostTemplate(props: PageProps<any, any>) {\n  const post = props.data.markdownRemark;\n  const siteTitle = props.data.site.siteMetadata.title;\n  const description = post.excerpt;\n  const { previous, next } = props.pageContext;\n\n  let prevNextLinks;\n  if (previous || next) {\n    prevNextLinks = (\n      <ul\n        style={{\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-between\",\n          listStyle: \"none\",\n          padding: 0,\n        }}\n      >\n        <li>\n          {previous && (\n            <Link to={previous.fields.slug} rel=\"prev\">\n              ← {previous.frontmatter.title}\n            </Link>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Link to={next.fields.slug} rel=\"next\">\n              {next.frontmatter.title} →\n            </Link>\n          )}\n        </li>\n      </ul>\n    );\n  }\n\n  return (\n    <Layout\n      location={props.location}\n      helmetTitle={`${post.frontmatter.title} | ${siteTitle}`}\n      title={post.frontmatter.title}\n      helmetDescription={description}\n      description={`${post.frontmatter.date} - ${post.fields.readingTime.text}`}\n    >\n      <SEO title={post.frontmatter.title} description={post.excerpt} />\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      <hr\n        style={{\n          marginBottom: rhythm(1),\n        }}\n      />\n      {prevNextLinks}\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        readingTime {\n          text\n        }\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\n"],"names":["SEO","description","lang","meta","keywords","title","query","render","metaDescription","data","htmlAttributes","titleTemplate","name","content","property","author","detailsQuery","MdPostTemplate","props","post","siteTitle","previous","next","prevNextLinks","style","display","flexWrap","justifyContent","listStyle","padding","to","rel","location","helmetTitle","helmetDescription","text","excerpt","dangerouslySetInnerHTML","__html","html","marginBottom","rhythm"],"sourceRoot":""}