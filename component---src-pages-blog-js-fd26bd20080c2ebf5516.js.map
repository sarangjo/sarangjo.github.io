{"version":3,"sources":["webpack:///./src/components/postExcerpt.js","webpack:///./src/pages/blog.js"],"names":["PostExcerpt","node","type","title","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","date","source","dangerouslySetInnerHTML","__html","excerpt","content","BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","location","description","helmetTitle","BLOG_TITLE","keywords","map","i","React","Component","pageQuery"],"mappings":"2FAAA,iDAoCeA,IAxBK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACrBC,EAAQF,EAAKG,YAAYD,OAASF,EAAKI,OAAOC,KACpD,OACE,yBAAKC,IAAKN,EAAKI,OAAOC,MACpB,wBACEE,MAAO,CACLC,aAAcC,YAAO,OAGvB,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWC,GAAIX,EAAKI,OAAOC,MACjDH,IAGL,+BAAQF,EAAKG,YAAYS,MApBf,SAACZ,EAAMC,GAAP,MACL,YAATA,EACE,2BAAID,EAAKG,YAAYU,QAErB,uBAAGC,wBAAyB,CAAEC,OAAQf,EAAKgB,WAiBxCC,CAAQjB,EAAMC,M,gJClBrB,IAGMiB,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAavB,MACnCwB,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CACEC,SAAUR,KAAKC,MAAMO,SACrB3B,MAZW,kBAaX4B,YAZiB,kCAajBC,YAAgBC,qBAAgBT,GAEhC,kBAAC,IAAD,CACErB,MAAM,OACN+B,SAAU,CAAC,OAAD,iCAEXP,EAAMQ,KAAI,WAAWC,GAAX,IAAGnC,EAAH,EAAGA,KAAH,OACT,kBAAC,IAAD,CAAaM,IAAK6B,EAAGnC,KAAMA,S,GAlBboC,IAAMC,WA8BfnB,YAER,IAAMoB,EAAS","file":"component---src-pages-blog-js-fd26bd20080c2ebf5516.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport { rhythm } from \"../utils/typography\";\n\nconst content = (node, type) =>\n  type === \"theater\" ? (\n    <p>{node.frontmatter.source}</p>\n  ) : (\n    <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n  );\n\nconst PostExcerpt = ({ node, type }) => {\n  const title = node.frontmatter.title || node.fields.slug;\n  return (\n    <div key={node.fields.slug}>\n      <h3\n        style={{\n          marginBottom: rhythm(1 / 4),\n        }}\n      >\n        <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n          {title}\n        </Link>\n      </h3>\n      <small>{node.frontmatter.date}</small>\n      {content(node, type)}\n    </div>\n  );\n};\n\nPostExcerpt.propTypes = {\n  node: PropTypes.object,\n  type: PropTypes.string,\n};\n\nexport default PostExcerpt;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\n\nimport PostExcerpt from \"../components/postExcerpt\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst BLOG_TITLE = \"Life Enthusiasm\";\nconst BLOG_DESCRIPTION = \"The world is a beautiful place.\";\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout\n        location={this.props.location}\n        title={BLOG_TITLE}\n        description={BLOG_DESCRIPTION}\n        helmetTitle={`${BLOG_TITLE} | ${siteTitle}`}\n      >\n        <SEO\n          title=\"Blog\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        {posts.map(({ node }, i) => (\n          <PostExcerpt key={i} node={node} />\n        ))}\n      </Layout>\n    );\n  }\n}\n\nBlogIndex.propTypes = {\n  location: PropTypes.object,\n  data: PropTypes.object,\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { slug: { regex: \"//blog/.*/\" } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}