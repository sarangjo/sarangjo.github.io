{"version":3,"file":"component---src-pages-theater-tsx-a2b2281df2b822760a55.js","mappings":"6LAWe,SAASA,EAAY,GAMhC,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,KAKMC,EAAQF,EAAAA,YAAAA,OAA0BA,EAAAA,OAAxC,KACA,OACE,uBAAKG,IAAKH,EAAAA,OAAYI,MACpB,sBACEC,MAAO,CACLC,cAAcC,EAAAA,EAAAA,IAAO,EAAD,KAGtB,wBAAMF,MAAO,CAAEG,UAAU,QAAWC,GAAIT,EAAAA,OAAYI,MANxD,IAUE,6BAAQJ,EAAAA,YAVV,MAhBY,SAACA,EAAK,GAAN,MACdC,YAAAA,EACE,yBAAID,EAAAA,YADNC,QAGE,qBAAGS,wBAAyB,CAAEC,OAAQX,EAAKY,WAuBxCC,CAAQb,EAZb,M,uFCfa,SAASc,EAAI,GAYxB,IAXFC,EAWC,EAXDA,YAWC,IAVDC,KAAAA,OAUC,iBATDC,KAAAA,OASC,MATM,GASN,MARDC,SAAAA,OAQC,MARU,GAQV,EAPDhB,EAOC,EAPDA,MAQA,OACE,+BACEiB,MADF,EAEEC,OAAQ,YACN,IAAMC,EACJN,GAAeO,EAAAA,KAAAA,aADjB,YAEA,OACE,qBACEC,eAAgB,CACdP,KAAAA,GAEFd,MAJF,EAKEsB,cAAa,QAAUF,EAAAA,KAAAA,aALzB,MAMEL,KAAM,CACJ,CACEQ,KADF,cAEEZ,QAASQ,GAEX,CACEK,SADF,WAEEb,QAASX,GAEX,CACEwB,SADF,iBAEEb,QAASQ,GAEX,CACEK,SADF,UAEEb,QAAQ,WAEV,CACEY,KADF,eAEEZ,QAAQ,WAEV,CACEY,KADF,kBAEEZ,QAASS,EAAAA,KAAAA,aAAuBK,QAElC,CACEF,KADF,gBAEEZ,QAASX,GAEX,CACEuB,KADF,sBAEEZ,QAASQ,IA/BP,OAmCFH,EAAA,SACI,CACEO,KADF,WAEEZ,QAASK,EAAAA,KAAAA,OAtCb,mBAkDlB,IAAMU,EAAN,c,6GCzEMC,EAAN,UAIe,SAASC,EAAaC,GACnC,IAAQT,EAASS,EAAjB,KACM7B,EAAQoB,EAAAA,KAAAA,aAAd,MACMU,EAAQV,EAAAA,YAH4C,MAM1D,OACE,qBACEW,SAAUF,EADZ,SAEE7B,MAFF,EAGEa,YAbN,qEAcMmB,YAAgBL,EAAL,MAJb,EAKEM,SAAS,GAET,qBACEjC,MADF,EAEEgB,SAAU,CAAC,UAAD,iCAEXc,EAAA,KAAU,kBAAGhC,EAAH,cACT,qBAAaG,IAAb,EAAqBH,KAArB,EAAiCC,KAAK","sources":["webpack://sarangjo.github.io/./src/components/postExcerpt.tsx","webpack://sarangjo.github.io/./src/components/seo.tsx","webpack://sarangjo.github.io/./src/pages/theater.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { rhythm } from \"../utils/typography\";\n\nconst content = (node, type) =>\n  type === \"theater\" ? (\n    <p>{node.frontmatter.source}</p>\n  ) : (\n    <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n  );\n\nexport default function PostExcerpt({\n  node,\n  type,\n}: {\n  node: any;\n  type?: string;\n}) {\n  const title = node.frontmatter.title || node.fields.slug;\n  return (\n    <div key={node.fields.slug}>\n      <h3\n        style={{\n          marginBottom: rhythm(1 / 4),\n        }}\n      >\n        <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n          {title}\n        </Link>\n      </h3>\n      <small>{node.frontmatter.date}</small>\n      {content(node, type)}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nexport default function SEO({\n  description,\n  lang = `en`,\n  meta = [],\n  keywords = [],\n  title,\n}: {\n  description?: string;\n  lang?: string;\n  meta?: any[];\n  keywords?: string[];\n  title: string;\n}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\n\nimport PostExcerpt from \"../components/postExcerpt\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst TITLE = \"Theater\";\nconst DESCRIPTION =\n  \"All the world's a stage, and all the men and women merely players.\";\n\nexport default function TheaterIndex(props: PageProps<any>) {\n  const { data } = props;\n  const title = data.site.siteMetadata.title;\n  const posts = data.allFountain.edges;\n\n  // TODO factor out redundant code about helmetTitle\n  return (\n    <Layout\n      location={props.location}\n      title={TITLE}\n      description={DESCRIPTION}\n      helmetTitle={`${TITLE} | ${title}`}\n      showBio={false}\n    >\n      <SEO\n        title={TITLE}\n        keywords={[`theater`, `gatsby`, `javascript`, `react`]}\n      />\n      {posts.map(({ node }, i) => (\n        <PostExcerpt key={i} node={node} type=\"theater\" />\n      ))}\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allFountain(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            source\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["PostExcerpt","node","type","title","key","slug","style","marginBottom","rhythm","boxShadow","to","dangerouslySetInnerHTML","__html","excerpt","content","SEO","description","lang","meta","keywords","query","render","metaDescription","data","htmlAttributes","titleTemplate","name","property","author","detailsQuery","TITLE","TheaterIndex","props","posts","location","helmetTitle","showBio"],"sourceRoot":""}