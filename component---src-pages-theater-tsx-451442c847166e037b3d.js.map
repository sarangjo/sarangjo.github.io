{"version":3,"file":"component---src-pages-theater-tsx-451442c847166e037b3d.js","mappings":"+LAWe,SAASA,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,KAKMC,EAAQF,EAAKG,YAAYD,OAASF,EAAKI,OAAOC,KACpD,OACE,uBAAKC,IAAKN,EAAKI,OAAOC,MACpB,sBACEE,MAAO,CACLC,cAAcC,EAAAA,EAAAA,IAAO,EAAI,KAG3B,gBAAC,EAAAC,KAAD,CAAMH,MAAO,CAAEI,UAAU,QAAWC,GAAIZ,EAAKI,OAAOC,MACjDH,IAGL,6BAAQF,EAAKG,YAAYU,MA1Bf,SAACb,EAAMC,GAAP,MACL,YAATA,EACE,yBAAID,EAAKG,YAAYW,QAErB,qBAAGC,wBAAyB,CAAEC,OAAQhB,EAAKiB,WAuBxCC,CAAQlB,EAAMC,M,uFC3BN,SAASkB,EAAT,GAYX,IAXFC,EAWC,EAXDA,YAWC,IAVDC,KAAAA,OAUC,iBATDC,KAAAA,OASC,MATM,GASN,MARDC,SAAAA,OAQC,MARU,GAQV,EAPDrB,EAOC,EAPDA,MAQA,OACE,gBAAC,EAAAsB,YAAD,CACEC,MAAOC,EACPC,OAAQ,SAACC,GACP,IAAMC,EACJT,GAAeQ,EAAKE,KAAKC,aAAaX,YACxC,OACE,gBAAC,IAAD,CACEY,eAAgB,CACdX,KAAAA,GAEFnB,MAAOA,EACP+B,cAAa,QAAUL,EAAKE,KAAKC,aAAa7B,MAC9CoB,KAAM,CACJ,CACEY,KAAK,cACLhB,QAASW,GAEX,CACEM,SAAS,WACTjB,QAAShB,GAEX,CACEiC,SAAS,iBACTjB,QAASW,GAEX,CACEM,SAAS,UACTjB,QAAQ,WAEV,CACEgB,KAAK,eACLhB,QAAQ,WAEV,CACEgB,KAAK,kBACLhB,QAASU,EAAKE,KAAKC,aAAaK,QAElC,CACEF,KAAK,gBACLhB,QAAShB,GAEX,CACEgC,KAAK,sBACLhB,QAASW,IAGVQ,OACCd,EAASe,OAAS,EACd,CACEJ,KAAK,WACLhB,QAASK,EAASgB,KAAT,OAEX,IAELF,OAAOf,QAQtB,IAAMI,EAAY,c,8GCzEZc,EAAQ,UAIC,SAASC,EAAaC,GACnC,IAAQd,EAASc,EAATd,KACF1B,EAAQ0B,EAAKE,KAAKC,aAAa7B,MAC/ByC,EAAQf,EAAKgB,YAAYC,MAG/B,OACE,gBAAC,IAAD,CACEC,SAAUJ,EAAMI,SAChB5C,MAAOsC,EACPpB,YAZJ,qEAaI2B,YAAgBP,EAAL,MAAgBtC,EAC3B8C,SAAS,GAET,gBAAC,IAAD,CACE9C,MAAOsC,EACPjB,SAAU,CAAC,UAAD,iCAEXoB,EAAMM,KAAI,WAAWC,GAAX,IAAGlD,EAAH,EAAGA,KAAH,OACT,gBAAC,IAAD,CAAaM,IAAK4C,EAAGlD,KAAMA,EAAMC,KAAK","sources":["webpack://sarangjo.github.io/./src/components/postExcerpt.tsx","webpack://sarangjo.github.io/./src/components/seo.tsx","webpack://sarangjo.github.io/./src/pages/theater.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport { rhythm } from \"../utils/typography\";\n\nconst content = (node, type) =>\n  type === \"theater\" ? (\n    <p>{node.frontmatter.source}</p>\n  ) : (\n    <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n  );\n\nexport default function PostExcerpt({\n  node,\n  type,\n}: {\n  node: any;\n  type?: string;\n}) {\n  const title = node.frontmatter.title || node.fields.slug;\n  return (\n    <div key={node.fields.slug}>\n      <h3\n        style={{\n          marginBottom: rhythm(1 / 4),\n        }}\n      >\n        <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n          {title}\n        </Link>\n      </h3>\n      <small>{node.frontmatter.date}</small>\n      {content(node, type)}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nexport default function SEO({\n  description,\n  lang = `en`,\n  meta = [],\n  keywords = [],\n  title,\n}: {\n  description?: string;\n  lang?: string;\n  meta?: any[];\n  keywords?: string[];\n  title: string;\n}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\n\nimport PostExcerpt from \"../components/postExcerpt\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst TITLE = \"Theater\";\nconst DESCRIPTION =\n  \"All the world's a stage, and all the men and women merely players.\";\n\nexport default function TheaterIndex(props: PageProps<any>) {\n  const { data } = props;\n  const title = data.site.siteMetadata.title;\n  const posts = data.allFountain.edges;\n\n  // TODO factor out redundant code about helmetTitle\n  return (\n    <Layout\n      location={props.location}\n      title={TITLE}\n      description={DESCRIPTION}\n      helmetTitle={`${TITLE} | ${title}`}\n      showBio={false}\n    >\n      <SEO\n        title={TITLE}\n        keywords={[`theater`, `gatsby`, `javascript`, `react`]}\n      />\n      {posts.map(({ node }, i) => (\n        <PostExcerpt key={i} node={node} type=\"theater\" />\n      ))}\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allFountain(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            source\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["PostExcerpt","node","type","title","frontmatter","fields","slug","key","style","marginBottom","rhythm","Link","boxShadow","to","date","source","dangerouslySetInnerHTML","__html","excerpt","content","SEO","description","lang","meta","keywords","StaticQuery","query","detailsQuery","render","data","metaDescription","site","siteMetadata","htmlAttributes","titleTemplate","name","property","author","concat","length","join","TITLE","TheaterIndex","props","posts","allFountain","edges","location","helmetTitle","showBio","map","i"],"sourceRoot":""}