{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/bio.js","webpack:///./src/utils/proptypes.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["BlogIndex","render","data","this","props","title","site","siteMetadata","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","description","helmetTitle","BLOG_TITLE","_components_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_3__","boxShadow","to","date","dangerouslySetInnerHTML","__html","excerpt","React","Component","propTypes","PropTypes","object","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","bioQuery","Bio","react_default","gatsby_browser_entry","author","display","gatsby_image_default","fixed","avatar","childImageSharp","alt","marginRight","marginTop","minWidth","borderRadius","imgStyle","margin","_2612972255","oneOfType","arrayOf","ListLink","react","marginLeft","pt","Header","_this$props","showBio","superTop","parts","split","filter","x","trim","length","link","push","each","part","justifyContent","bio","listStyle","flexShrink","header_ListLink","bool","Layout","helmetDescription","maxWidth","padding","Helmet_default","htmlAttributes","lang","meta","name","content","header","SEO","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","titleTemplate","property","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array"],"mappings":"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","file":"component---src-pages-blog-js-545ca605c0d7f4c08815.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { rhythm } from \"../utils/typography\";\n\nconst BLOG_TITLE = \"Life Enthusiasm\";\nconst BLOG_DESCRIPTION = \"The world is a beautiful place.\";\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const title = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout\n        location={this.props.location}\n        title={BLOG_TITLE}\n        description={BLOG_DESCRIPTION}\n        helmetTitle={`${BLOG_TITLE} | ${title}`}\n      >\n        <SEO\n          title=\"Blog\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>\n                {node.frontmatter.date}\n                {/* TODO add category */}\n              </small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          );\n        })}\n      </Layout>\n    );\n  }\n}\n\nBlogIndex.propTypes = {\n  location: PropTypes.object,\n  data: PropTypes.object,\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { slug: { regex: \"//blog/.*/\" } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\";\nimport Wordpress2016 from \"typography-theme-wordpress-2016\";\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  };\n};\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles();\n}\n\nexport default typography;\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport Image from \"gatsby-image\";\n\nimport { rhythm } from \"../utils/typography\";\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata;\n        return (\n          <div\n            style={{\n              display: `flex`,\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: rhythm(1 / 2),\n                marginTop: \"auto\",\n                marginBottom: \"auto\",\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n              imgStyle={{\n                borderRadius: `50%`,\n              }}\n            />\n            <p style={{ margin: \"auto 0\" }}>\n              <strong>{author}</strong>&apos;s personal website.\n            </p>\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n      }\n    }\n  }\n`;\n\nexport default Bio;\n","import PropTypes from \"prop-types\";\r\n\r\nexport const children = PropTypes.oneOfType([\r\n  PropTypes.arrayOf(PropTypes.node),\r\n  PropTypes.node,\r\n]);\r\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport each from \"lodash/each\";\nimport PropTypes from \"prop-types\";\n\nimport Bio from \"./bio\";\nimport { rhythm, scale } from \"../utils/typography\";\nimport * as pt from \"../utils/proptypes\";\n\nconst ListLink = props => (\n  <li style={{ display: \"inline-block\", marginLeft: \"1rem\" }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n);\n\nListLink.propTypes = {\n  to: PropTypes.string,\n  children: pt.children,\n};\n\nclass Header extends React.Component {\n  render() {\n    const { location, title, description, showBio } = this.props;\n\n    const superTop = [];\n    const parts = location.pathname.split(\"/\").filter(x => !!x.trim().length);\n\n    let link = \"/\";\n    superTop.push(\n      <Link to={link} key={link}>\n        home\n      </Link>\n    );\n    each(parts, part => {\n      link += `${part}/`;\n      superTop.push(\n        <span key={link}>\n          &nbsp;&gt;&nbsp;\n          <Link to={link}>{part}</Link>\n        </span>\n      );\n    });\n\n    return (\n      <header\n        style={{\n          marginBottom: rhythm(0.4),\n        }}\n      >\n        <i style={{ ...scale(-1 / 4) }}>{superTop}</i>\n        <h1 style={{ ...scale(1.5), marginTop: 0, marginBottom: rhythm(0.75) }}>\n          {title}\n        </h1>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginBottom: rhythm(0.6),\n          }}\n        >\n          {showBio ? (\n            <Bio />\n          ) : (\n            <i style={{ margin: \"auto 0\" }}>{description}</i>\n          )}\n          <ul\n            style={{\n              listStyle: \"none\",\n              flexShrink: 0,\n              marginBottom: \"auto\",\n              marginTop: \"auto\",\n            }}\n          >\n            <ListLink to=\"/\">Home</ListLink>\n            <ListLink to=\"/blog/\">Blog</ListLink>\n            <ListLink to=\"/theater/\">Theater</ListLink>\n            {/*<ListLink to=\"/poetry/\">Poetry</ListLink>*/}\n          </ul>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  location: PropTypes.object,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  showBio: PropTypes.bool,\n};\n\nexport default Header;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nimport Header from \"./header\";\nimport { rhythm } from \"../utils/typography\";\nimport * as pt from \"../utils/proptypes\";\n\n// Import typefaces\nimport \"typeface-montserrat\";\nimport \"typeface-merriweather\";\n\nexport default class Layout extends React.Component {\n  render() {\n    const {\n      location,\n      title,\n      description,\n      helmetTitle,\n      helmetDescription,\n      children,\n      showBio,\n    } = this.props;\n\n    return (\n      <div\n        style={{\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          maxWidth: rhythm(30),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <Helmet\n          htmlAttributes={{ lang: \"en\" }}\n          meta={[\n            { name: \"description\", content: helmetDescription || description },\n          ]}\n          title={helmetTitle || title}\n        />\n        <Header\n          title={title}\n          description={description}\n          location={location}\n          showBio={showBio}\n        />\n        {children}\n      </div>\n    );\n  }\n}\n\nLayout.propTypes = {\n  location: PropTypes.object,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  helmetTitle: PropTypes.string,\n  helmetDescription: PropTypes.string,\n  children: pt.children,\n  showBio: PropTypes.bool,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}