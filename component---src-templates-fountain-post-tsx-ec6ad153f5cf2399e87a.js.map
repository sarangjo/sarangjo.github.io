{"version":3,"file":"component---src-templates-fountain-post-tsx-ec6ad153f5cf2399e87a.js","mappings":"+LAIe,SAASA,EAAI,GAYxB,IAXFC,EAWC,EAXDA,YAWC,IAVDC,KAAAA,OAUC,iBATDC,KAAAA,OASC,MATM,GASN,MARDC,SAAAA,OAQC,MARU,GAQV,EAPDC,EAOC,EAPDA,MAQA,OACE,+BACEC,MADF,EAEEC,OAAQ,YACN,IAAMC,EACJP,GAAeQ,EAAAA,KAAAA,aADjB,YAEA,OACE,qBACEC,eAAgB,CACdR,KAAAA,GAEFG,MAJF,EAKEM,cAAa,QAAUF,EAAAA,KAAAA,aALzB,MAMEN,KAAM,CACJ,CACES,KADF,cAEEC,QAASL,GAEX,CACEM,SADF,WAEED,QAASR,GAEX,CACES,SADF,iBAEED,QAASL,GAEX,CACEM,SADF,UAEED,QAAQ,WAEV,CACED,KADF,eAEEC,QAAQ,WAEV,CACED,KADF,kBAEEC,QAASJ,EAAAA,KAAAA,aAAuBM,QAElC,CACEH,KADF,gBAEEC,QAASR,GAEX,CACEO,KADF,sBAEEC,QAASL,IA/BP,OAmCFJ,EAAA,SACI,CACEQ,KADF,WAEEC,QAAST,EAAAA,KAAAA,OAtCb,mBAkDlB,IAAMY,EAAN,c,oGCvEe,SAASC,EAAqBC,GAC3C,IAAMC,EAAOD,EAAAA,KAAb,SACME,EAAYF,EAAAA,KAAAA,KAAAA,aAFgD,MAOlE,OACE,qBACEG,SAAUH,EADZ,SAEEI,YAAgBH,EAAAA,YAAL,YAFb,EAGEd,MAAOc,EAAAA,YAHT,MAIElB,YAAW,GAAKkB,EAAAA,YAAiBI,MAEjC,qBAAKlB,MAAOc,EAAAA,YAAiBd,QAC7B,uBAAKmB,UAAU,UACb,uBAAKC,wBAAyB,CAAEC,OAAQP,EAAAA,KAAUQ","sources":["webpack://sarangjo.github.io/./src/components/seo.tsx","webpack://sarangjo.github.io/./src/templates/fountain-post.tsx"],"sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nexport default function SEO({\n  description,\n  lang = `en`,\n  meta = [],\n  keywords = [],\n  title,\n}: {\n  description?: string;\n  lang?: string;\n  meta?: any[];\n  keywords?: string[];\n  title: string;\n}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nimport \"./fountain-post.css\";\n\nexport default function FountainPostTemplate(props: PageProps<any>) {\n  const post = props.data.fountain;\n  const siteTitle = props.data.site.siteMetadata.title;\n  // TODO add description as part of the summary of the piece\n  // const description = post.excerpt;\n  // helmetDescription={description}\n\n  return (\n    <Layout\n      location={props.location}\n      helmetTitle={`${post.frontmatter.title} | ${siteTitle}`}\n      title={post.frontmatter.title}\n      description={`${post.frontmatter.date}`}\n    >\n      <SEO title={post.frontmatter.title} />\n      <div className=\"script\">\n        <div dangerouslySetInnerHTML={{ __html: post.html.script }} />\n      </div>\n    </Layout>\n  );\n}\n\n// The `$slug` parameter is passed in for each page by the page context passed into the\n// `createPage()` function in `gatsby-node.js` for fountain Gatsby objects.\nexport const pageQuery = graphql`\n  query TheaterPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    fountain(fields: { slug: { eq: $slug } }) {\n      id\n      html {\n        script\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\n"],"names":["SEO","description","lang","meta","keywords","title","query","render","metaDescription","data","htmlAttributes","titleTemplate","name","content","property","author","detailsQuery","FountainPostTemplate","props","post","siteTitle","location","helmetTitle","date","className","dangerouslySetInnerHTML","__html","script"],"sourceRoot":""}