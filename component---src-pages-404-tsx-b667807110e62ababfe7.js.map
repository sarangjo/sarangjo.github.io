{"version":3,"file":"component---src-pages-404-tsx-b667807110e62ababfe7.js","mappings":"+LAIe,SAASA,EAAI,GAYxB,IAXFC,EAWC,EAXDA,YAWC,IAVDC,KAAAA,OAUC,iBATDC,KAAAA,OASC,MATM,GASN,MARDC,SAAAA,OAQC,MARU,GAQV,EAPDC,EAOC,EAPDA,MAQA,OACE,+BACEC,MADF,EAEEC,OAAQ,YACN,IAAMC,EACJP,GAAeQ,EAAAA,KAAAA,aADjB,YAEA,OACE,qBACEC,eAAgB,CACdR,KAAAA,GAEFG,MAJF,EAKEM,cAAa,QAAUF,EAAAA,KAAAA,aALzB,MAMEN,KAAM,CACJ,CACES,KADF,cAEEC,QAASL,GAEX,CACEM,SADF,WAEED,QAASR,GAEX,CACES,SADF,iBAEED,QAASL,GAEX,CACEM,SADF,UAEED,QAAQ,WAEV,CACED,KADF,eAEEC,QAAQ,WAEV,CACED,KADF,kBAEEC,QAASJ,EAAAA,KAAAA,aAAuBM,QAElC,CACEH,KADF,gBAEEC,QAASR,GAEX,CACEO,KADF,sBAEEC,QAASL,IA/BP,OAmCFJ,EAAA,SACI,CACEQ,KADF,WAEEC,QAAST,EAAAA,KAAAA,OAtCb,mBAkDlB,IAAMY,EAAN,c,oGC1Ee,SAASC,EAAa,GAAqC,IAAnCR,EAAkC,EAAlCA,KAAMS,EAA4B,EAA5BA,SACrCC,EAAYV,EAAAA,KAAAA,aAAlB,MAEA,OACE,qBAAQS,SAAR,EAA4Bb,MAAOc,GACjC,qBAAKd,MAAM,mBACX,0BAFF,aAGE,yBAJJ","sources":["webpack://sarangjo.github.io/./src/components/seo.tsx","webpack://sarangjo.github.io/./src/pages/404.tsx"],"sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { StaticQuery, graphql } from \"gatsby\";\n\nexport default function SEO({\n  description,\n  lang = `en`,\n  meta = [],\n  keywords = [],\n  title,\n}: {\n  description?: string;\n  lang?: string;\n  meta?: any[];\n  keywords?: string[];\n  title: string;\n}) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={(data) => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nexport default function NotFoundPage({ data, location }: PageProps<any>) {\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"404: Not Found\" />\n      <h1>Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"names":["SEO","description","lang","meta","keywords","title","query","render","metaDescription","data","htmlAttributes","titleTemplate","name","content","property","author","detailsQuery","NotFoundPage","location","siteTitle"],"sourceRoot":""}